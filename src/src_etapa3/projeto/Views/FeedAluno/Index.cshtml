@model IEnumerable<projeto.Models.Professor>

    @{
    ViewData["Title"] = "Feed";
    var currentFilter = ViewData["CurrentFilter"] as string;
    }

    <div class="container">
        <h2 class="text-center">@ViewData["Title"]</h2>

        <form asp-action="Index" method="get" class="mb-3">
            <div class="form-group text-center">
                <input type="text" name="searchString" class="form-control d-inline-block w-50" placeholder="Buscar por nome ou matéria" value="@currentFilter" />
                <button type="submit" class="btn btn-primary mt-2">Buscar</button>
            </div>
        </form>

        <div class="row justify-content-center">
            <div class="col-md-6">
                @foreach (var professor in Model)
            {
                <div class="card mb-3">
                    <div class="card-body text-center">
                        <h5 class="card-title">@professor.Name</h5>
                        <p class="card-text"><strong>Matéria:</strong> @professor.Materias</p>
                        <form asp-action="Marcar" method="post" asp-controller="FeedAluno" oninput="validateForm(this)">
                            <input type="hidden" name="professorId" value="@professor.Id" />
                            <div class="form-group">
                                <input type="text" name="conteudo" class="form-control" placeholder="Digite o conteúdo da aula" required />
                            </div>
                            <button type="submit" class="btn btn-primary mt-2" disabled>Marcar Aula</button>
                        </form>
                    </div>
                </div>
            }
            </div>
        </div>
    </div>

    <script>
function validateForm(form) {
    const conteudoInput = form.querySelector('input[name="conteudo"]');
    const submitButton = form.querySelector('button[type="submit"]');
    submitButton.disabled = !conteudoInput.value.trim();
}
    </script>
